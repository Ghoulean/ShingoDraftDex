{"version":3,"file":"component---src-templates-pokemon-article-tsx-520ab609ad283845078d.js","mappings":"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","sources":["webpack://shingo-draft-dex/./src/widgets/analysis/analysis_tab.tsx","webpack://shingo-draft-dex/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://shingo-draft-dex/./node_modules/@mdx-js/react/lib/index.js","webpack://shingo-draft-dex/./src/widgets/analysis/analysis_renderer.tsx","webpack://shingo-draft-dex/./src/widgets/analysis/analysis.tsx","webpack://shingo-draft-dex/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://shingo-draft-dex/./src/widgets/sprite.tsx","webpack://shingo-draft-dex/./src/widgets/type_icon.tsx","webpack://shingo-draft-dex/./src/widgets/pokemon_overview.tsx","webpack://shingo-draft-dex/./src/templates/pokemon_article.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Pokemon } from \"../../models/Pokemon\";\nimport { PokemonIcon } from \"../pokemon_icon\";\nimport { GenerationNum } from \"@pkmn/types\";\n\nexport type AnalysisTabProps = {\n    generation: GenerationNum;\n    pokemonName: string;\n    isActive: boolean;\n    callback: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport const AnalysisTab = (props: AnalysisTabProps) => {\n    const labelText: string = props.pokemonName;\n    const Button = styled.button({\n        border: \"none\",\n        outline: \"none\",\n        cursor: \"pointer\",\n        padding: \"14px 16px\",\n        backgroundColor: \"#FFFFFF\",\n        \"&:hover\": {\n            backgroundColor: \"#CCCCCC\",\n        },\n    });\n    return (\n        <Button onClick={props.callback}>\n            <PokemonIcon\n                gen={props.generation}\n                pokemonDisplayName={props.pokemonName}\n            />{\" \"}\n            {labelText}\n        </Button>\n    );\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _defineProperty from \"/home/runner/work/ShingoDraftDex/ShingoDraftDex/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react';\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport var MDXContext = React.createContext({});\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n\n/** @type {Components} */\nvar emptyObject = {};\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n    children = _ref.children,\n    disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport { MDXProvider } from \"@mdx-js/react\";\n\nexport type AnalysisRendererProps = {\n    children: any;\n};\n\nconst shortcodes = {\n    Link,\n};\nexport const AnalysisRenderer = (props: AnalysisRendererProps) => {\n    return <MDXProvider components={shortcodes}>{props.children}</MDXProvider>;\n};\n","import React from \"react\";\nimport { Pokemon } from \"../../models/Pokemon\";\nimport { AnalysisTab } from \"./analysis_tab\";\nimport { AnalysisRenderer } from \"./analysis_renderer\";\nimport { GenerationNum } from \"@pkmn/types\";\nimport styled from \"@emotion/styled\";\n\nconst Centered = styled.div({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    margin: \"0 auto\",\n    padding: \"10px 0 0\",\n});\nconst Tabholder = styled.div({\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    margin: \"0 auto\",\n    padding: \"10px 0 0\",\n});\n\ntype AnalysisProps = {\n    generation: GenerationNum;\n    orderedPokemonList: string[];\n    pokemonToMarkdownBodyMap: {\n        [pokemonDisplayName: string]: {\n            pokemon: Pokemon;\n            rawMarkdownBody: string;\n        };\n    };\n};\n\ntype AnalysisState = {\n    currentTab: string;\n};\n\nexport class Analysis extends React.Component<AnalysisProps, AnalysisState> {\n    private readonly generation: GenerationNum;\n    private readonly bodies: {\n        [key: string]: string;\n    };\n    private readonly orderedPokemonList: string[];\n\n    constructor(props: AnalysisProps) {\n        super(props);\n        this.generation = props.generation;\n        this.bodies = {};\n        this.orderedPokemonList = props.orderedPokemonList;\n        props.orderedPokemonList.forEach((pokemonDisplayName: string) => {\n            this.bodies[pokemonDisplayName] =\n                props.pokemonToMarkdownBodyMap[\n                    pokemonDisplayName\n                ]!.rawMarkdownBody;\n        });\n        this.state = {\n            currentTab: props.orderedPokemonList[0],\n        };\n        this.changeTab.bind(this);\n    }\n\n    changeTab = (id: string) => {\n        this.setState({ currentTab: id });\n    };\n\n    render() {\n        return (\n            <Centered>\n                <Tabholder>\n                    {this.orderedPokemonList.map((pokemonName, i) => {\n                        return (\n                            <AnalysisTab\n                                key={i}\n                                generation={this.generation}\n                                pokemonName={pokemonName}\n                                isActive={this.state.currentTab === pokemonName}\n                                callback={() => {\n                                    this.changeTab(pokemonName);\n                                }}\n                            />\n                        );\n                    })}\n                </Tabholder>\n                <AnalysisRenderer>\n                    {this.bodies[this.state.currentTab]}\n                </AnalysisRenderer>\n            </Centered>\n        );\n    }\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import * as React from \"react\";\nimport { Sprites } from \"@pkmn/img\";\nimport { GenerationNum } from \"@pkmn/data\";\n\nexport type SpriteProps = {\n    gen: GenerationNum;\n    pokemonDisplayName: string;\n};\n\nexport const Sprite = (props: SpriteProps) => {\n    // TODO: rehost images\n    const { url } = Sprites.getPokemon(props.pokemonDisplayName, {\n        gen: props.gen,\n    });\n    return <img src={url}></img>;\n};\n","import * as React from \"react\";\nimport { Icons } from \"@pkmn/img\";\nimport { TypeName } from \"@pkmn/types\";\n\nexport type TypeIconProps = {\n    typeName: TypeName;\n};\n\nexport const TypeIcon = (props: TypeIconProps) => {\n    // TODO: rehost images\n    const { url } = Icons.getType(props.typeName, {});\n    return <img src={url}></img>;\n};\n","import * as React from \"react\";\nimport { GenerationNum, Specie, TypeName } from \"@pkmn/data\";\nimport styled from \"@emotion/styled\";\nimport { Sprite } from \"./sprite\";\nimport { TypeIcon } from \"./type_icon\";\n\nconst Box = styled.nav({\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    margin: \"0 auto\",\n    padding: \"10px 0 0\",\n});\n\nconst TypeAbilityHolder = styled.nav({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    margin: \"0 auto\",\n    padding: \"10px 0 0\",\n});\n\nexport type PokemonOverviewProps = {\n    gen: GenerationNum;\n    specie: Specie;\n};\n\nexport const PokemonOverview = (props: PokemonOverviewProps) => {\n    return (\n        <Box>\n            <Sprite gen={props.gen} pokemonDisplayName={props.specie.name} />\n            <TypeAbilityHolder>\n                {props.specie.types.map((typeName: TypeName) => {\n                    return <TypeIcon typeName={typeName} />;\n                })}\n            </TypeAbilityHolder>\n            <div\n                dangerouslySetInnerHTML={{\n                    __html: JSON.stringify(props.specie),\n                }}\n            />\n        </Box>\n    );\n};\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport type { Pokemon } from \"../models/Pokemon\";\nimport { graphql } from \"gatsby\";\nimport { Natdex } from \"../utils/natdex\";\nimport { GenerationNum, Specie } from \"@pkmn/data\";\nimport { Sprite } from \"../widgets/sprite\";\nimport { Analysis } from \"../widgets/analysis/analysis\";\nimport { PokemonOverview } from \"../widgets/pokemon_overview\";\n\nconst Centered = styled.div({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    margin: \"0 auto\",\n    padding: \"10px 0 0\",\n});\n\nexport default function PokemonArticle(props: {\n    data: {\n        allMdx: { edges: { node: { frontmatter: Pokemon; body: string } }[] };\n    };\n}) {\n    const edges = props.data.allMdx!.edges;\n    const pokemon: Pokemon[] = edges.map((edge) => {\n        return edge.node.frontmatter;\n    });\n\n    const specie: Specie[] = pokemon.map((pokemon) => {\n        return Natdex.get(pokemon.generation as GenerationNum).species.get(\n            pokemon.displayName\n        )!;\n    });\n    const generation: GenerationNum = pokemon[0].generation;\n    const pokemonToMarkdownBodyMap: {\n        [pokemonDisplayName: string]: {\n            pokemon: Pokemon;\n            rawMarkdownBody: string;\n        };\n    } = {};\n    for (const edge of edges) {\n        pokemonToMarkdownBodyMap[edge.node.frontmatter.displayName] = {\n            pokemon: edge.node.frontmatter,\n            rawMarkdownBody: edge.node.body,\n        };\n    }\n    return (\n        <Centered>\n            <div>\n                <h1>{pokemon[0].displayName}</h1>\n                <div>\n                    {specie.map((s: Specie) => {\n                        return <PokemonOverview gen={generation} specie={s} />\n                    })}\n                </div>\n                <Analysis\n                    generation={generation}\n                    orderedPokemonList={pokemon.map((pokemon) => {\n                        return pokemon.displayName;\n                    })}\n                    pokemonToMarkdownBodyMap={pokemonToMarkdownBodyMap}\n                />\n            </div>\n        </Centered>\n    );\n}\n\nexport const query = graphql`\n    query ($generation: Int!, $dexNumber: Int!) {\n        allMdx(\n            filter: {\n                frontmatter: {\n                    dexNumber: { eq: $dexNumber }\n                    generation: { eq: $generation }\n                }\n            }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        dexNumber\n                        displayName\n                        generation\n                        idName\n                        rating\n                        specialConditions\n                        tags\n                    }\n                    body\n                }\n            }\n        }\n    }\n`;\n"],"names":["AnalysisTab","props","labelText","pokemonName","Button","_styled","___EmotionJSX","onClick","callback","PokemonIcon","gen","generation","pokemonDisplayName","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","_ref","children","disableParentContext","allComponents","Provider","shortcodes","Link","AnalysisRenderer","Centered","Tabholder","Analysis","_this","changeTab","id","setState","currentTab","bodies","orderedPokemonList","pokemonToMarkdownBodyMap","rawMarkdownBody","state","bind","self","ReferenceError","render","this","map","_this2","isActive","React","Sprite","url","Sprites","src","TypeIcon","Icons","typeName","Box","TypeAbilityHolder","PokemonOverview","specie","name","types","dangerouslySetInnerHTML","__html","JSON","stringify","styles","PokemonArticle","edges","data","allMdx","pokemon","edge","node","frontmatter","Natdex","species","get","displayName","body","s"],"sourceRoot":""}